[tool.poetry]
name = "phoney"
version = "0.1.0"
description = "Test data generator API"
authors = ["JP White <jpwhite3@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
fastapi = "^0.110.0"
uvicorn = {extras = ["standard"], version = "^0.29.0"}
faker = "^22.0.0"
pydantic = {extras = ["email"], version = "^2.7.1"}
pydantic-settings = "^2.2.1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-dotenv = "^1.0.1"
python-multipart = "^0.0.18"
httpx = "^0.27.0"  # Required for TestClient
pytest-mock = "^3.14.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
black = "^24.3.0"
ruff = "^0.1.0"
isort = "^5.13.0"
mypy = "^1.6.0"
coverage = "^7.3.0"
pytest-cov = "^4.1.0"
pre-commit = "^3.5.0"

[tool.poetry.group.dev.dependencies.pytest-asyncio]
version = "^0.23.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py312"
select = ["E", "F", "B", "I", "C4", "C90", "N", "UP", "S"]
ignore = [
    "E501",  # Line too long (handled by black)
    "B904",  # Within `except` clause, raise exceptions with `raise ... from err` (acceptable for simple error handling)
    "S112",  # try-except-continue/pass (acceptable for iterative operations)
    "C901",  # Function is too complex (acceptable for some business logic functions)
    "S104",  # Possible binding to all interfaces (acceptable for development configs)
    "B008",  # Do not perform function call in defaults (acceptable for FastAPI dependency injection)
    "UP017"  # Use datetime.UTC alias (conflicts with Python 3.10 compatibility)
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "S101",  # Allow assert statements in test files
    "S105",  # Allow hardcoded passwords in test fixtures
    "S106",  # Allow hardcoded password arguments in test fixtures
    "S110",  # Allow try-except-pass in tests for error handling verification
    "B017"   # Allow assertRaises(Exception) in tests
]
"examples/*" = [
    "S101",   # Allow assert statements in example files
    "S113",   # Allow requests without timeout in examples
    "F401",   # Allow unused imports in examples
    "UP035",  # Allow deprecated typing imports in examples
    "UP006",  # Allow old-style type annotations in examples
    "I001"    # Allow unsorted imports in examples
]
"**/examples_simple_api.py" = [
    "S113",   # Allow requests without timeout in examples
    "I001"    # Allow unsorted imports in examples
]
"aws-infrastructure/**" = [
    "F401",   # Allow unused imports in infrastructure
    "UP035",  # Allow deprecated typing imports in infrastructure
    "UP006",  # Allow old-style type annotations in infrastructure
    "I001"    # Allow unsorted imports in infrastructure
]

[tool.mypy]
python_version = "3.13"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
